version: "3.5"

secrets:
    cloudflare_api_token:
        file: ${PWD}/secrets/cloudflare_api_token
    google_smtp_pass:
        file: ${PWD}/secrets/google_smtp_pass
    vaultwarden_admin_token:
        file: ${PWD}/secrets/vaultwarden_admin_token
    
networks: 
    traefik:

services:
    traefik:
        hostname: traefik
        image: traefik:v2.10.4
        restart: unless-stopped
        container_name: traefik
        user: ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000}
        command:
            - --api # Secure API
            - --providers.docker # Tells Traefik to listen to docker
            - --providers.docker.exposedbydefault=false # Do not add docker services by default, but using "traefik.enable=true"
            - --providers.file.directory=/homecontroller/dynamic_conf # File provider
            # HHTP entry with redirect to HTTPS
            - --entrypoints.web.address=:80
            - --entrypoints.web.http.redirections.entrypoint.to=websecure
            - --entrypoints.web.http.redirections.entrypoint.scheme=https
            # HTTPS entry
            - --entrypoints.websecure.address=:443
            - --entrypoints.websecure.http.tls=true
            - --entrypoints.websecure.http.tls.certresolver=cloudflare
             # Allow these IPs to set the X-Forwarded-* headers and proxyProtocol
            - --entrypoints.websecure.forwardedHeaders.trustedIPs=${PROXY_TRUSTEDIPS}
            - --entryPoints.websecure.proxyProtocol.trustedIPs=${PROXY_TRUSTEDIPS}
            # Let's encrypt with Cloudflare
            - --certificatesresolvers.cloudflare.acme.email=${LE_EMAIL}
            - --certificatesresolvers.cloudflare.acme.storage=/data/acme.json
            - --certificatesresolvers.cloudflare.acme.caserver=${LE_CASERVER:-https://acme-v02.api.letsencrypt.org/directory}
            - --certificatesResolvers.cloudflare.acme.dnsChallenge.provider=cloudflare
            - --certificatesResolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
            - --certificatesResolvers.cloudflare.acme.dnsChallenge.delayBeforeCheck=90
            # Disable check for valid HTTPS certificates of backend services
            - --serverstransport.insecureskipverify=true
            - --log.filePath=/data/traefik.log
        networks: 
            - traefik
        ports:
            - 80:80 # HTTP
            - 443:443 # HTTPS
        secrets:
            - cloudflare_api_token
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro # docker provider
            - ${PWD}/traefik:/homecontroller # file provider
            - ${PWD}/data/traefik:/data # certificates & logs
        environment:
            - PROXY_DOMAIN # used in dynamic configuration (file provider)
            - PROXY_LOCAL_DISKSTATION # used in dynamic configuration (file provider)
            - PROXY_WEBSTATION_SUBDOMAIN=${PROXY_WEBSTATION_SUBDOMAIN:-www}
            - CLOUDFLARE_DNS_API_TOKEN_FILE=/run/secrets/cloudflare_api_token
        labels:
            # IP Whitelist
            - traefik.http.middlewares.traefik-ipwhitelist.ipwhitelist.sourcerange=${PROXY_WHITELIST:-10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
            # Dashboard
            - traefik.enable=true
            - traefik.http.routers.traefik.entrypoints=websecure
            - traefik.http.routers.traefik.rule=Host(`traefik.${PROXY_DOMAIN}`)
            - traefik.http.routers.traefik.service=api@internal
            - traefik.http.routers.traefik.middlewares=traefik-ipwhitelist
            # wildcard certificates
            - traefik.http.routers.traefik.tls=true
            - traefik.http.routers.traefik.tls.certresolver=cloudflare
            - traefik.http.routers.traefik.tls.domains[0].main=*.${PROXY_DOMAIN}
            # default cert
            - traefik.tls.stores.default.defaultgeneratedcert.resolver=cloudflare
            - traefik.tls.stores.default.defaultgeneratedcert.domain.main=${PROXY_DOMAIN}
            - traefik.tls.stores.default.defaultgeneratedcert.domain.sans=*.${PROXY_DOMAIN}


    unifi:
        hostname: unifi
        container_name: unifi
        image: linuxserver/unifi-controller:7.4.162
        restart: unless-stopped
        depends_on:
            - traefik
        networks: 
            - traefik
        ports:
            - 3478:3478/udp # Unifi STUN port
            - 10001:10001/udp # Required for AP discovery
            - 8080:8080 # Required for device communication
        volumes:
            - ${PWD}/data/unifi/config:/config
        environment:
            - PUID=${DOCKER_USER_ID:-1000}
            - PGID=${DOCKER_GROUP_ID:-1000}
        labels:
            - traefik.enable=true
            - traefik.http.routers.unifi.rule=Host(`unifi.${PROXY_DOMAIN}`)
            - traefik.http.routers.unifi.entrypoints=websecure
            - traefik.http.routers.unifi.middlewares=traefik-ipwhitelist
            - traefik.http.services.unifi.loadbalancer.server.port=8443
            - traefik.http.services.unifi.loadbalancer.server.scheme=https

    adguard:
        hostname: adguard
        container_name: adguard
        image: adguard/adguardhome:v0.107.34
        restart: unless-stopped
        user: ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000}
        depends_on:
            - traefik
        networks: 
            - traefik
        ports:
            - 53:53/tcp # plain DNS
            - 53:53/udp # plain DNS
        volumes:
            - ${PWD}/data/adguard/work:/opt/adguardhome/work
            - ${PWD}/data/adguard/conf:/opt/adguardhome/conf
        labels:
            - traefik.enable=true
            - traefik.http.routers.adguard.rule=Host(`adguard.${PROXY_DOMAIN}`)
            - traefik.http.routers.adguard.entrypoints=websecure
            - traefik.http.routers.adguard.middlewares=traefik-ipwhitelist
            - traefik.http.services.adguard.loadbalancer.server.port=3000
            - traefik.http.services.adguard.loadbalancer.server.scheme=http

    vaultwarden:
        hostname: vaultwarden
        container_name: vaultwarden
        image: vaultwarden/server:1.28.1
        restart: unless-stopped
        user: ${DOCKER_USER_ID:-1000}:${DOCKER_GROUP_ID:-1000}
        depends_on:
            - traefik
        networks:
            - traefik
        environment:
            - WEBSOCKET_ENABLED=true  # Enable WebSocket notifications.
            - SIGNUPS_ALLOWED=false # Disable registration of new users
            - DOMAIN=https://vaultwarden.${PROXY_DOMAIN}
            # Enable mail via Google
            - SMTP_HOST=smtp.gmail.com
            - SMTP_FROM=${GOOGLE_EMAIL}
            - SMTP_PORT=465
            - SMTP_SECURITY=force_tls
            - SMTP_USERNAME=${GOOGLE_EMAIL}
        secrets:
            - google_smtp_pass
            - vaultwarden_admin_token
        volumes:
            - ${PWD}/data/vaultwarden/data:/data
            - ${PWD}/vaultwarden/init.sh:/etc/vaultwarden.sh # script to set sensitive data via Docker secrets
        labels:
            - traefik.enable=true
            # Entry Point for UI
            - traefik.http.routers.vaultwarden-ui.service=vaultwarden-ui
            - traefik.http.routers.vaultwarden-ui.rule=Host(`vaultwarden.${PROXY_DOMAIN}`)
            - traefik.http.routers.vaultwarden-ui.entrypoints=websecure
            - traefik.http.services.vaultwarden-ui.loadbalancer.server.port=80
            # Entry Point for Admin (with IP Whitelist)
            - traefik.http.routers.vaultwarden-admin.service=vaultwarden-admin
            - traefik.http.routers.vaultwarden-admin.rule=Host(`vaultwarden.${PROXY_DOMAIN}`) && PathPrefix(`/admin`)
            - traefik.http.routers.vaultwarden-admin.entrypoints=websecure
            - traefik.http.routers.vaultwarden-admin.middlewares=traefik-ipwhitelist
            - traefik.http.services.vaultwarden-admin.loadbalancer.server.port=80
            # Entry Point for Websocket
            - traefik.http.routers.vaultwarden-ws.service=vaultwarden-ws
            - traefik.http.routers.vaultwarden-ws.rule=Host(`vaultwarden.${PROXY_DOMAIN}`) && Path(`/notifications/hub`)
            - traefik.http.routers.vaultwarden-ws.entrypoints=websecure
            - traefik.http.services.vaultwarden-ws.loadbalancer.server.port=3012
